name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.node.outputs.node-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        id: node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          if npm ci; then
           echo "npm ci succeeded"
          else
           echo "npm ci failed — falling back to npm install"
           npm install --no-audit --no-fund
          fi
          
      - name: Verify package-lock.json matches linux resolution
        shell: bash
        run: |
          echo "Checking package-lock.json consistency (linux)"
          # regenerate package-lock metadata as linux would resolve it
          npm install --package-lock-only --no-audit --no-fund --ignore-scripts
          if ! git diff --no-ext-diff --quiet -- package-lock.json; then
            echo "package-lock.json changed after linux package-lock generation."
            echo "Regenerate the lockfile on linux and commit it (use .github/workflows/regenerate-lockfile.yml)."
            git --no-pager diff -- package-lock.json || true
            exit 1
          fi

      - name: Install Biome CLI (linux)
        run: npm install -g @biomejs/biome@2.3.0

      - name: Ensure Biome linux runtime for local package
        run: |
          # Ensure the local biome wrapper has its linux runtime available for repo scripts
          npm install --no-save @biomejs/cli-linux-x64 || true

      - name: Ensure lightningcss native pkg (rebuild/install)
        run: |
          # Try to rebuild native modules from source for linux first
          npm rebuild --build-from-source lightningcss @tailwindcss/oxide || true
          # If rebuild didn't produce the required pkg, install linux-compatible package(s)
          npm install --no-save lightningcss@latest @tailwindcss/oxide@latest || true

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          if npm ci; then
           echo "npm ci succeeded"
          else
           echo "npm ci failed — falling back to npm install"
           npm install --no-audit --no-fund
          fi

      - name: Run Biome lint
        run: npm run lint

      - name: Run Biome format (apply)
        run: npm run format

      - name: Verify no formatting changes
        run: |
          git --no-pager diff --exit-code || (echo "Formatting changed files. Run 'npm run format' and commit the result." && exit 1)

  typecheck:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          if npm ci; then
           echo "npm ci succeeded"
          else
           echo "npm ci failed — falling back to npm install"
           npm install --no-audit --no-fund
          fi

      - name: Run lint
        run: npm run lint

      - name: Type check
        run: npm run type-check --if-present
      - name: Run native package diagnostics
        run: ./.github/scripts/check-native-pkgs.sh || true

  build:
    needs: [setup, lint, typecheck]
    runs-on: ubuntu-latest
    env:
      CSS_TRANSFORMER_WASM: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug package.json bytes
        shell: bash
        run: |
          echo "First 32 bytes (hex):"
          head -c 32 package.json | xxd -p | sed -E 's/(..)/\1 /g' || true

      - name: Validate package.json UTF-8 parse
        shell: bash
        run: |
          node -e "try { const fs=require('fs'); const s=fs.readFileSync('package.json','utf8'); JSON.parse(s); console.log('package.json JSON OK'); } catch(e) { console.error('package.json parse error:', e.message); process.exit(2) }"

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install
        run: |
          if npm ci; then
           echo "npm ci succeeded"
          else
           echo "npm ci failed — falling back to npm install"
           npm install --no-audit --no-fund
          fi

      - name: Rebuild or install lightningcss (fix missing pkg)
        run: |
          npm rebuild --build-from-source lightningcss @tailwindcss/oxide || true
          npm install --no-save lightningcss@latest @tailwindcss/oxide@latest || true
      - name: Build
        run: npm run build
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install
        run: |
          if npm ci; then
           echo "npm ci succeeded"
          else
           echo "npm ci failed — falling back to npm install"
           npm install --no-audit --no-fund
          fi

      - name: Run tests
        run: npm test --if-present