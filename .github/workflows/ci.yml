name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.node.outputs.node-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        id: node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Biome lint
        run: npm run lint

      - name: Run Biome format (apply)
        run: npm run format

      - name: Verify no formatting changes
        run: |
          # fail if formatting changed files
          git --no-pager diff --exit-code || (echo "Formatting changed files. Run 'npm run format' and commit the result." && exit 1)

  typecheck:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check --if-present

  build:
    needs: [setup, lint, typecheck]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug package.json bytes
        shell: bash
        run: |
          echo "First 32 bytes (hex):"
          head -c 32 package.json | xxd -p | sed -E 's/(..)/\1 /g' || true

      - name: Validate package.json UTF-8 parse
        shell: bash
        run: |
          node -e "try { const fs=require('fs'); const s=fs.readFileSync('package.json','utf8'); JSON.parse(s); console.log('package.json JSON OK'); } catch(e) { console.error('package.json parse error:', e.message); process.exit(2) }"

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install
        run: npm ci

      - name: Build
        env:
          CSS_TRANSFORMER_WASM: 1
        run: npm run build

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install
        run: npm ci

      - name: Run tests
        run: npm test --if-present